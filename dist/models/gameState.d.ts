import LifeCounter from "../game_objects/life_counter";
import MazeModel from "./mazeModel";
import { Container } from "pixi.js";
import ScoreBoard from "../game_objects/scoreBoard";
import HighScore from "../game_objects/highScore";
import Label from "../game_objects/label";
import FreightendState from "./freightenedState";
import LevelCounter from "../game_objects/levelCounter";
export default class GameState {
    lifeCounter: LifeCounter;
    levelCounter: LevelCounter;
    mazeModel: MazeModel;
    container: Container;
    pelletContainer: Container;
    scoreBoard: ScoreBoard;
    highScore: HighScore;
    ghostContainer: Container;
    redGhost: any;
    sirenThresholds: Map<number, string>;
    pelletsEaten: number;
    callbackTimerActive: boolean;
    currentSirenNo: string;
    readyLabel: Label;
    freightendState: FreightendState;
    level: number;
    level_won: boolean;
    constructor();
    update(elapsedTime: number): void;
    adjustSiren(): void;
    pacmanStartDeathCallback: () => void;
    pacmanEndDeathCallback: () => void;
    pelletEatenCallback: () => void;
    powerPelletEatenCallback: () => void;
    loadNextLevel: () => void;
    setLevelConfig(): void;
    resetLevel: () => void;
    addPointsCallback: (points: number) => void;
    restartSirenCallback: () => void;
    _addGhostsToJail(): void;
}
